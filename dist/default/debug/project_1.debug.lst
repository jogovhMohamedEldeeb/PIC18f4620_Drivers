

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Oct 14 00:30:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 23/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   001092                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_regiters
    63   001092  80                 	db	128
    64   001093  0F                 	db	15
    65   001094  81                 	db	129
    66   001095  0F                 	db	15
    67   001096  82                 	db	130
    68   001097  0F                 	db	15
    69   001098  83                 	db	131
    70   001099  0F                 	db	15
    71   00109A  84                 	db	132
    72   00109B  0F                 	db	15
    73                           
    74                           ;initializer for _lat_regiters
    75   00109C  89                 	db	137
    76   00109D  0F                 	db	15
    77   00109E  8A                 	db	138
    78   00109F  0F                 	db	15
    79   0010A0  8B                 	db	139
    80   0010A1  0F                 	db	15
    81   0010A2  8C                 	db	140
    82   0010A3  0F                 	db	15
    83   0010A4  8D                 	db	141
    84   0010A5  0F                 	db	15
    85                           
    86                           ;initializer for _tris_regiters
    87   0010A6  92                 	db	146
    88   0010A7  0F                 	db	15
    89   0010A8  93                 	db	147
    90   0010A9  0F                 	db	15
    91   0010AA  94                 	db	148
    92   0010AB  0F                 	db	15
    93   0010AC  95                 	db	149
    94   0010AD  0F                 	db	15
    95   0010AE  96                 	db	150
    96   0010AF  0F                 	db	15
    97                           
    98                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2943
    99   0010B0  68                 	db	104
   100                           
   101                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2941
   102   0010B1  5A                 	db	90
   103                           
   104                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2939
   105   0010B2  62                 	db	98
   106                           
   107                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2937
   108   0010B3  2A                 	db	42
   109                           
   110                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2932
   111   0010B4  1A                 	db	26
   112                           
   113                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2930
   114   0010B5  62                 	db	98
   115                           
   116                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2928
   117   0010B6  2A                 	db	42
   118                           
   119                           ;initializer for _RB7_Flag
   120   0010B7  01                 	db	1
   121                           
   122                           ;initializer for _RB6_Flag
   123   0010B8  01                 	db	1
   124                           
   125                           ;initializer for _RB5_Flag
   126   0010B9  01                 	db	1
   127                           
   128                           ;initializer for _RB4_Flag
   129   0010BA  01                 	db	1
   130                           
   131                           	psect	smallconst
   132   001000                     __psmallconst:
   133                           	callstack 0
   134   001000  00                 	db	0
   135   001001                     _btn_values:
   136                           	callstack 0
   137   001001  37                 	db	55
   138   001002  38                 	db	56
   139   001003  39                 	db	57
   140   001004  2F                 	db	47
   141   001005  34                 	db	52
   142   001006  35                 	db	53
   143   001007  36                 	db	54
   144   001008  2A                 	db	42
   145   001009  31                 	db	49
   146   00100A  32                 	db	50
   147   00100B  33                 	db	51
   148   00100C  2D                 	db	45
   149   00100D  23                 	db	35
   150   00100E  30                 	db	48
   151   00100F  3D                 	db	61
   152   001010  2B                 	db	43
   153   001011                     __end_of_btn_values:
   154                           	callstack 0
   155   000000                     _SSPADD	set	4040
   156   000000                     _SSPCON2bits	set	4037
   157   000000                     _SPBRGH	set	4016
   158   000000                     _SPBRG	set	4015
   159   000000                     _TXREG	set	4013
   160   000000                     _TXSTAbits	set	4012
   161   000000                     _RCREG	set	4014
   162   000000                     _RCSTAbits	set	4011
   163   000000                     _TMR3L	set	4018
   164   000000                     _TMR3H	set	4019
   165   000000                     _TMR2	set	4044
   166   000000                     _T2CONbits	set	4042
   167   000000                     _TMR1L	set	4046
   168   000000                     _TMR1H	set	4047
   169   000000                     _T1CONbits	set	4045
   170   000000                     _TMR0L	set	4054
   171   000000                     _TMR0H	set	4055
   172   000000                     _SSPBUF	set	4041
   173   000000                     _SSPSTATbits	set	4039
   174   000000                     _SSPCON1bits	set	4038
   175   000000                     _INTCON2bits	set	4081
   176   000000                     _EECON2	set	4007
   177   000000                     _RCONbits	set	4048
   178   000000                     _ADCON1bits	set	4033
   179   000000                     _ADRESL	set	4035
   180   000000                     _ADRESH	set	4036
   181   000000                     _INTCONbits	set	4082
   182   000000                     _TRISD	set	3989
   183   000000                     _TRISC	set	3988
   184   000000                     _PR2	set	4043
   185   000000                     _TRISB	set	3987
   186   000000                     _TRISE	set	3990
   187   000000                     _TRISCbits	set	3988
   188   000000                     _PIE1bits	set	3997
   189   000000                     _ADCON2bits	set	4032
   190   000000                     _ADCON0bits	set	4034
   191   000000                     _PORTE	set	3972
   192   000000                     _PORTD	set	3971
   193   000000                     _PORTC	set	3970
   194   000000                     _PORTB	set	3969
   195   000000                     _PORTA	set	3968
   196   000000                     _LATA	set	3977
   197   000000                     _TRISA	set	3986
   198   000000                     _EECON1bits	set	4006
   199   000000                     _EEDATA	set	4008
   200   000000                     _EEADR	set	4009
   201   000000                     _EEADRH	set	4010
   202   000000                     _T3CONbits	set	4017
   203   000000                     _IPR2bits	set	4002
   204   000000                     _PIR2bits	set	4001
   205   000000                     _PIE2bits	set	4000
   206   000000                     _CCP2CONbits	set	4026
   207   000000                     _CCP1CONbits	set	4029
   208   000000                     _IPR1bits	set	3999
   209   000000                     _PIR1bits	set	3998
   210   000000                     _CCPR1L	set	4030
   211   000000                     _CCPR2L	set	4027
   212   000000                     _T0CONbits	set	4053
   213   000000                     _INTCON3bits	set	4080
   214   000000                     _LATE	set	3981
   215   000000                     _LATD	set	3980
   216   000000                     _LATC	set	3979
   217   000000                     _LATB	set	3978
   218   000000                     _BAUDCONbits	set	4024
   219   001011                     STR_1:
   220   001011  25                 	db	37
   221   001012  69                 	db	105	;'i'
   222   001013  00                 	db	0
   223   001014  00                 	db	0	; dummy byte at the end
   224   000000                     
   225                           ; #config settings
   226                           
   227                           	psect	cinit
   228   00105C                     __pcinit:
   229                           	callstack 0
   230   00105C                     start_initialization:
   231                           	callstack 0
   232   00105C                     __initialization:
   233                           	callstack 0
   234                           
   235                           ; Initialize objects allocated to COMRAM (41 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237   00105C  0E92               	movlw	low __pidataCOMRAM
   238   00105E  6EF6               	movwf	tblptrl,c
   239   001060  0E10               	movlw	high __pidataCOMRAM
   240   001062  6EF7               	movwf	tblptrh,c
   241   001064  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242   001066  6EF8               	movwf	tblptru,c
   243   001068  EE00  F04A         	lfsr	0,__pdataCOMRAM
   244   00106C  EE10 F029          	lfsr	1,41
   245   001070                     copy_data0:
   246   001070  0009               	tblrd		*+
   247   001072  CFF5 FFEE          	movff	tablat,postinc0
   248   001076  50E5               	movf	postdec1,w,c
   249   001078  50E1               	movf	fsr1l,w,c
   250   00107A  E1FA               	bnz	copy_data0
   251                           
   252                           ; Clear objects allocated to COMRAM (73 bytes)
   253   00107C  EE00  F001         	lfsr	0,__pbssCOMRAM
   254   001080  0E49               	movlw	73
   255   001082                     clear_0:
   256   001082  6AEE               	clrf	postinc0,c
   257   001084  06E8               	decf	wreg,f,c
   258   001086  E1FD               	bnz	clear_0
   259   001088                     end_of_initialization:
   260                           	callstack 0
   261   001088                     __end_of__initialization:
   262                           	callstack 0
   263   001088  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264   00108A  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265   00108C  0100               	movlb	0
   266   00108E  EF5E  F008         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMRAM
   269   000001                     __pbssCOMRAM:
   270                           	callstack 0
   271   000001                     	ds	6
   272   000007                     _I2C_Report_Receive_Overflow_InterruptHandle:
   273                           	callstack 0
   274   000007                     	ds	2
   275   000009                     _I2C_DefaultInterruptHandle:
   276                           	callstack 0
   277   000009                     	ds	2
   278   00000B                     _I2C_Report_Write_Collision_InterruptHandler:
   279                           	callstack 0
   280   00000B                     	ds	2
   281   00000D                     _EUSART_OverrunErrorHandler:
   282                           	callstack 0
   283   00000D                     	ds	2
   284   00000F                     _EUSART_FramingErrorHandler:
   285                           	callstack 0
   286   00000F                     	ds	2
   287   000011                     _EUSART_RxInterruptHandler:
   288                           	callstack 0
   289   000011                     	ds	2
   290   000013                     _EUSART_TxInterruptHandler:
   291                           	callstack 0
   292   000013                     	ds	2
   293   000015                     _timer3preload:
   294                           	callstack 0
   295   000015                     	ds	2
   296   000017                     _TMR3InterruptHandler:
   297                           	callstack 0
   298   000017                     	ds	2
   299   000019                     _timer2preload:
   300                           	callstack 0
   301   000019                     	ds	2
   302   00001B                     _TMR2InterruptHandler:
   303                           	callstack 0
   304   00001B                     	ds	2
   305   00001D                     _timer1preload:
   306                           	callstack 0
   307   00001D                     	ds	2
   308   00001F                     _TMR1InterruptHandler:
   309                           	callstack 0
   310   00001F                     	ds	2
   311   000021                     _timer0_preload:
   312                           	callstack 0
   313   000021                     	ds	2
   314   000023                     _TMR0_InterruptHandler:
   315                           	callstack 0
   316   000023                     	ds	2
   317   000025                     _SPI_InterruptHandler:
   318                           	callstack 0
   319   000025                     	ds	2
   320   000027                     _RB7_InterruptHandeler_Low:
   321                           	callstack 0
   322   000027                     	ds	2
   323   000029                     _RB7_InterruptHandeler_High:
   324                           	callstack 0
   325   000029                     	ds	2
   326   00002B                     _RB6_InterruptHandeler_Low:
   327                           	callstack 0
   328   00002B                     	ds	2
   329   00002D                     _RB6_InterruptHandeler_High:
   330                           	callstack 0
   331   00002D                     	ds	2
   332   00002F                     _RB5_InterruptHandeler_Low:
   333                           	callstack 0
   334   00002F                     	ds	2
   335   000031                     _RB5_InterruptHandeler_High:
   336                           	callstack 0
   337   000031                     	ds	2
   338   000033                     _RB4_InterruptHandeler_Low:
   339                           	callstack 0
   340   000033                     	ds	2
   341   000035                     _RB4_InterruptHandeler_High:
   342                           	callstack 0
   343   000035                     	ds	2
   344   000037                     _INT2_InterruptHandeler:
   345                           	callstack 0
   346   000037                     	ds	2
   347   000039                     _INT1_InterruptHandeler:
   348                           	callstack 0
   349   000039                     	ds	2
   350   00003B                     _INT0_InterruptHandeler:
   351                           	callstack 0
   352   00003B                     	ds	2
   353   00003D                     _CCP2_InterruptHandler:
   354                           	callstack 0
   355   00003D                     	ds	2
   356   00003F                     _CCP1_InterruptHandler:
   357                           	callstack 0
   358   00003F                     	ds	2
   359   000041                     _ADC_InterruptHandler:
   360                           	callstack 0
   361   000041                     	ds	2
   362   000043                     relay_off@F2885:
   363                           	callstack 0
   364   000043                     	ds	1
   365   000044                     relay_on@F2880:
   366                           	callstack 0
   367   000044                     	ds	1
   368   000045                     relay_initialize@F2875:
   369                           	callstack 0
   370   000045                     	ds	1
   371   000046                     led_toggle@F2896:
   372                           	callstack 0
   373   000046                     	ds	1
   374   000047                     led_turn_off@F2891:
   375                           	callstack 0
   376   000047                     	ds	1
   377   000048                     led_turn_on@F2886:
   378                           	callstack 0
   379   000048                     	ds	1
   380   000049                     led_initialize@F2881:
   381                           	callstack 0
   382   000049                     	ds	1
   383                           
   384                           	psect	dataCOMRAM
   385   00004A                     __pdataCOMRAM:
   386                           	callstack 0
   387   00004A                     _port_regiters:
   388                           	callstack 0
   389   00004A                     	ds	10
   390   000054                     _lat_regiters:
   391                           	callstack 0
   392   000054                     	ds	10
   393   00005E                     _tris_regiters:
   394                           	callstack 0
   395   00005E                     	ds	10
   396   000068                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2943:
   397                           	callstack 0
   398   000068                     	ds	1
   399   000069                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2941:
   400                           	callstack 0
   401   000069                     	ds	1
   402   00006A                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2939:
   403                           	callstack 0
   404   00006A                     	ds	1
   405   00006B                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2937:
   406                           	callstack 0
   407   00006B                     	ds	1
   408   00006C                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2932:
   409                           	callstack 0
   410   00006C                     	ds	1
   411   00006D                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2930:
   412                           	callstack 0
   413   00006D                     	ds	1
   414   00006E                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2928:
   415                           	callstack 0
   416   00006E                     	ds	1
   417   00006F                     _RB7_Flag:
   418                           	callstack 0
   419   00006F                     	ds	1
   420   000070                     _RB6_Flag:
   421                           	callstack 0
   422   000070                     	ds	1
   423   000071                     _RB5_Flag:
   424                           	callstack 0
   425   000071                     	ds	1
   426   000072                     _RB4_Flag:
   427                           	callstack 0
   428   000072                     	ds	1
   429                           
   430                           	psect	cstackCOMRAM
   431   000073                     __pcstackCOMRAM:
   432                           	callstack 0
   433   000073                     ??_InterruptManagerLow:
   434   000073                     
   435                           ; 2 bytes @ 0x0
   436   000073                     	ds	1
   437   000074                     
   438                           ; 1 bytes @ 0x1
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 14 in file "application.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  2  1595[None  ] int 
   451 ;; Registers used:
   452 ;;		None
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels required when called: 4
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text0
   472   0010BC                     __ptext0:
   473                           	callstack 0
   474   0010BC                     _main:
   475                           	callstack 27
   476   0010BC                     l1596:
   477   0010BC  EF5E  F008         	goto	l1596
   478   0010C0  EF23  F000         	goto	start
   479   0010C4                     __end_of_main:
   480                           	callstack 0
   481                           
   482 ;; *************** function _InterruptManagerLow *****************
   483 ;; Defined at:
   484 ;;		line 27 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		_INT1_ISR
   507 ;; This function is called by:
   508 ;;		Interrupt level 1
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	intcodelo
   513   000018                     __pintcodelo:
   514                           	callstack 0
   515   000018                     _InterruptManagerLow:
   516                           	callstack 27
   517                           
   518                           ;incstack = 0
   519   000018  8074               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   520   00001A  CFE0 F073          	movff	bsr,??_InterruptManagerLow
   521   00001E                     
   522                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 28:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
   523   00001E  A6F0               	btfss	240,3,c	;volatile
   524   000020  EF14  F000         	goto	i1u207_21
   525   000024  EF16  F000         	goto	i1u207_20
   526   000028                     i1u207_21:
   527   000028  EF1F  F000         	goto	i1l1089
   528   00002C                     i1u207_20:
   529   00002C  A0F0               	btfss	240,0,c	;volatile
   530   00002E  EF1B  F000         	goto	i1u208_21
   531   000032  EF1D  F000         	goto	i1u208_20
   532   000036                     i1u208_21:
   533   000036  EF1F  F000         	goto	i1l1089
   534   00003A                     i1u208_20:
   535   00003A                     
   536                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 29:         INT1_ISR();
   537   00003A  EC62  F008         	call	_INT1_ISR	;wreg free
   538   00003E                     i1l1089:
   539   00003E  C073  FFE0         	movff	??_InterruptManagerLow,bsr
   540   000042  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   541   000044  0010               	retfie	
   542   000046                     __end_of_InterruptManagerLow:
   543                           	callstack 0
   544                           
   545 ;; *************** function _INT1_ISR *****************
   546 ;; Defined at:
   547 ;;		line 54 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		None
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 2
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_InterruptManagerLow
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text2
   576   0010C4                     __ptext2:
   577                           	callstack 0
   578   0010C4                     _INT1_ISR:
   579                           	callstack 27
   580   0010C4                     
   581                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 56:     (INTCON3bits.INT1IF = 0);
   582   0010C4  90F0               	bcf	240,0,c	;volatile
   583   0010C6  0012               	return		;funcret
   584   0010C8                     __end_of_INT1_ISR:
   585                           	callstack 0
   586                           
   587 ;; *************** function _InterruptManagerHigh *****************
   588 ;; Defined at:
   589 ;;		line 15 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 1
   610 ;; This function calls:
   611 ;;		_INT0_ISR
   612 ;;		_INT2_ISR
   613 ;; This function is called by:
   614 ;;		Interrupt level 2
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	intcode
   619   000008                     __pintcode:
   620                           	callstack 0
   621   000008                     _InterruptManagerHigh:
   622                           	callstack 27
   623                           
   624                           ;incstack = 0
   625   000008  8274               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   626   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   627                           
   628                           	psect	intcode_body
   629   001016                     __pintcode_body:
   630                           	callstack 27
   631   001016                     int_func:
   632                           	callstack 27
   633   001016  0006               	pop		; remove dummy address from shadow register refresh
   634   001018                     
   635                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 16:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
   636   001018  A8F0               	btfss	240,4,c	;volatile
   637   00101A  EF11  F008         	goto	i2u203_41
   638   00101E  EF13  F008         	goto	i2u203_40
   639   001022                     i2u203_41:
   640   001022  EF1C  F008         	goto	i2l1079
   641   001026                     i2u203_40:
   642   001026  A2F0               	btfss	240,1,c	;volatile
   643   001028  EF18  F008         	goto	i2u204_41
   644   00102C  EF1A  F008         	goto	i2u204_40
   645   001030                     i2u204_41:
   646   001030  EF1C  F008         	goto	i2l1079
   647   001034                     i2u204_40:
   648   001034                     
   649                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 17:         INT2_ISR();
   650   001034  EC64  F008         	call	_INT2_ISR	;wreg free
   651   001038                     i2l1079:
   652                           
   653                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 20:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
   654   001038  A8F2               	btfss	242,4,c	;volatile
   655   00103A  EF21  F008         	goto	i2u205_41
   656   00103E  EF23  F008         	goto	i2u205_40
   657   001042                     i2u205_41:
   658   001042  EF2C  F008         	goto	i2l1082
   659   001046                     i2u205_40:
   660   001046  A2F2               	btfss	242,1,c	;volatile
   661   001048  EF28  F008         	goto	i2u206_41
   662   00104C  EF2A  F008         	goto	i2u206_40
   663   001050                     i2u206_41:
   664   001050  EF2C  F008         	goto	i2l1082
   665   001054                     i2u206_40:
   666   001054                     
   667                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 21:         INT0_ISR();
   668   001054  EC66  F008         	call	_INT0_ISR	;wreg free
   669   001058                     i2l1082:
   670   001058  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   671   00105A  0011               	retfie		f
   672   00105C                     __end_of_InterruptManagerHigh:
   673                           	callstack 0
   674                           
   675 ;; *************** function _INT2_ISR *****************
   676 ;; Defined at:
   677 ;;		line 68 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		None
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_InterruptManagerHigh
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text4
   705   0010C8                     __ptext4:
   706                           	callstack 0
   707   0010C8                     _INT2_ISR:
   708                           	callstack 27
   709   0010C8                     
   710                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 70:     (INTCON3bits.INT2IF = 0);
   711   0010C8  92F0               	bcf	240,1,c	;volatile
   712   0010CA  0012               	return		;funcret
   713   0010CC                     __end_of_INT2_ISR:
   714                           	callstack 0
   715                           
   716 ;; *************** function _INT0_ISR *****************
   717 ;; Defined at:
   718 ;;		line 43 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		None
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_InterruptManagerHigh
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text5
   746   0010CC                     __ptext5:
   747                           	callstack 0
   748   0010CC                     _INT0_ISR:
   749                           	callstack 27
   750   0010CC                     
   751                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 45:     (INTCONbits.INT0IF = 0);
   752   0010CC  92F2               	bcf	242,1,c	;volatile
   753   0010CE  0012               	return		;funcret
   754   0010D0                     __end_of_INT0_ISR:
   755                           	callstack 0
   756                           
   757                           	psect	rparam
   758   000000                     
   759                           	psect	temp
   760   000074                     btemp:
   761                           	callstack 0
   762   000074                     	ds	1
   763   000000                     int$flags	set	btemp
   764   000000                     wtemp8	set	btemp+1
   765   000000                     ttemp5	set	btemp+1
   766   000000                     ttemp6	set	btemp+4
   767   000000                     ttemp7	set	btemp+8
   768                           
   769                           	psect	config
   770                           
   771                           ; Padding undefined space
   772   300000                     	org	3145728
   773   300000  FF                 	db	255
   774                           
   775                           ;Config register CONFIG1H @ 0x300001
   776                           ;	Oscillator Selection bits
   777                           ;	OSC = HS, HS oscillator
   778                           ;	Fail-Safe Clock Monitor Enable bit
   779                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   780                           ;	Internal/External Oscillator Switchover bit
   781                           ;	IESO = OFF, Oscillator Switchover mode disabled
   782   300001                     	org	3145729
   783   300001  02                 	db	2
   784                           
   785                           ;Config register CONFIG2L @ 0x300002
   786                           ;	Power-up Timer Enable bit
   787                           ;	PWRT = OFF, PWRT disabled
   788                           ;	Brown-out Reset Enable bits
   789                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   790                           ;	Brown Out Reset Voltage bits
   791                           ;	BORV = 1, 
   792   300002                     	org	3145730
   793   300002  09                 	db	9
   794                           
   795                           ;Config register CONFIG2H @ 0x300003
   796                           ;	Watchdog Timer Enable bit
   797                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   798                           ;	Watchdog Timer Postscale Select bits
   799                           ;	WDTPS = 32768, 1:32768
   800   300003                     	org	3145731
   801   300003  1E                 	db	30
   802                           
   803                           ; Padding undefined space
   804   300004                     	org	3145732
   805   300004  FF                 	db	255
   806                           
   807                           ;Config register CONFIG3H @ 0x300005
   808                           ;	CCP2 MUX bit
   809                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   810                           ;	PORTB A/D Enable bit
   811                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   812                           ;	Low-Power Timer1 Oscillator Enable bit
   813                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   814                           ;	MCLR Pin Enable bit
   815                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   816   300005                     	org	3145733
   817   300005  81                 	db	129
   818                           
   819                           ;Config register CONFIG4L @ 0x300006
   820                           ;	Stack Full/Underflow Reset Enable bit
   821                           ;	STVREN = ON, Stack full/underflow will cause Reset
   822                           ;	Single-Supply ICSP Enable bit
   823                           ;	LVP = OFF, Single-Supply ICSP disabled
   824                           ;	Extended Instruction Set Enable bit
   825                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   826                           ;	Background Debugger Enable bit
   827                           ;	DEBUG = 0x1, unprogrammed default
   828   300006                     	org	3145734
   829   300006  81                 	db	129
   830                           
   831                           ; Padding undefined space
   832   300007                     	org	3145735
   833   300007  FF                 	db	255
   834                           
   835                           ;Config register CONFIG5L @ 0x300008
   836                           ;	Code Protection bit
   837                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   838                           ;	Code Protection bit
   839                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   840                           ;	Code Protection bit
   841                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   842                           ;	Code Protection bit
   843                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   844   300008                     	org	3145736
   845   300008  0F                 	db	15
   846                           
   847                           ;Config register CONFIG5H @ 0x300009
   848                           ;	Boot Block Code Protection bit
   849                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   850                           ;	Data EEPROM Code Protection bit
   851                           ;	CPD = OFF, Data EEPROM not code-protected
   852   300009                     	org	3145737
   853   300009  C0                 	db	192
   854                           
   855                           ;Config register CONFIG6L @ 0x30000A
   856                           ;	Write Protection bit
   857                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   858                           ;	Write Protection bit
   859                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   860                           ;	Write Protection bit
   861                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   862                           ;	Write Protection bit
   863                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   864   30000A                     	org	3145738
   865   30000A  0F                 	db	15
   866                           
   867                           ;Config register CONFIG6H @ 0x30000B
   868                           ;	Configuration Register Write Protection bit
   869                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   870                           ;	Boot Block Write Protection bit
   871                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   872                           ;	Data EEPROM Write Protection bit
   873                           ;	WRTD = OFF, Data EEPROM not write-protected
   874   30000B                     	org	3145739
   875   30000B  E0                 	db	224
   876                           
   877                           ;Config register CONFIG7L @ 0x30000C
   878                           ;	Table Read Protection bit
   879                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   880                           ;	Table Read Protection bit
   881                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   882                           ;	Table Read Protection bit
   883                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   884                           ;	Table Read Protection bit
   885                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   886   30000C                     	org	3145740
   887   30000C  0F                 	db	15
   888                           
   889                           ;Config register CONFIG7H @ 0x30000D
   890                           ;	Boot Block Table Read Protection bit
   891                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   892   30000D                     	org	3145741
   893   30000D  40                 	db	64
   894                           tosu	equ	0xFFF
   895                           tosh	equ	0xFFE
   896                           tosl	equ	0xFFD
   897                           stkptr	equ	0xFFC
   898                           pclatu	equ	0xFFB
   899                           pclath	equ	0xFFA
   900                           pcl	equ	0xFF9
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           prodh	equ	0xFF4
   906                           prodl	equ	0xFF3
   907                           indf0	equ	0xFEF
   908                           postinc0	equ	0xFEE
   909                           postdec0	equ	0xFED
   910                           preinc0	equ	0xFEC
   911                           plusw0	equ	0xFEB
   912                           fsr0h	equ	0xFEA
   913                           fsr0l	equ	0xFE9
   914                           wreg	equ	0xFE8
   915                           indf1	equ	0xFE7
   916                           postinc1	equ	0xFE6
   917                           postdec1	equ	0xFE5
   918                           preinc1	equ	0xFE4
   919                           plusw1	equ	0xFE3
   920                           fsr1h	equ	0xFE2
   921                           fsr1l	equ	0xFE1
   922                           bsr	equ	0xFE0
   923                           indf2	equ	0xFDF
   924                           postinc2	equ	0xFDE
   925                           postdec2	equ	0xFDD
   926                           preinc2	equ	0xFDC
   927                           plusw2	equ	0xFDB
   928                           fsr2h	equ	0xFDA
   929                           fsr2l	equ	0xFD9
   930                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        41
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1     115
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S5265$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S5265$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S4373$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4373$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S4373$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3860$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3860$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3860$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3860$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_mode_select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3612$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3426$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_mode_select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3182$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_size_config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_mode_select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_prescaler_config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2958$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_SPI_Interrupt_Init@Config.MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config.MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2487$MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Init@Config.MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandeler@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@init_obj.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_init@init_obj.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_init@init_obj.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_init@init_obj.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_init@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2063$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@init_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2101$EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@init_obj.EXT_InterruptHandler_Low	PTR FTN()void  size(2) Largest target is 0

    S2101$EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@init_obj.EXT_InterruptHandler_High	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    port_regiters	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_regiters	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_regiters	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1119$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1119$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S668$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__my_memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManagerLow in COMRAM

    None.

Critical Paths under _InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _InterruptManagerLow                                  1     1      0       0
                                              0 COMRAM     1     1      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManagerHigh                                 0     0      0       0
                           _INT0_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _InterruptManagerLow (ROOT)
   _INT1_ISR

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   _INT2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      73       1       91.3%
BITBIGSFRhlhhhl     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRhlhhhl      4      0       0      38        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRllhlll      3      0       0      43        0.0%
BITBIGSFRllhllh      1      0       0      41        0.0%
BITBIGSFRllhlh       1      0       0      40        0.0%
BITBIGSFRllhh        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73      47        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Oct 14 00:30:56 2023

                                      _SSPSTATbits 0FC7                                                 bsr 0FE0  
                            ??_InterruptManagerLow 0073                          _RB5_InterruptHandeler_Low 002F  
                                              _PR2 0FCB                             ??_InterruptManagerHigh 0073  
                              led_initialize@F2881 0049                                                wreg 0FE8  
                            relay_initialize@F2875 0045                                               l1596 10BC  
                                             l1597 10BC                                               STR_1 1011  
                       _RB5_InterruptHandeler_High 0031                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             _TMR2 0FCC                                               _main 10BC  
                                             fsr1l 0FE1                                               btemp 0074  
                                             start 0046                                       ___param_bank 0000  
                                 __end_of_INT0_ISR 10D0                                   __end_of_INT1_ISR 10C8  
                                 __end_of_INT2_ISR 10CC                                              ?_main 0073  
                                            _EEADR 0FA9                                              i1l838 10C6  
                                            i2l833 10CE                                              i2l843 10CA  
                                            _RCREG 0FAE                                              _TMR0H 0FD7  
                                            _TMR1H 0FCF                                              _TMR0L 0FD6  
                                            _TMR1L 0FCE                                              _TMR3H 0FB3  
                                            _TMR3L 0FB2                                              _SPBRG 0FAF  
                                            _PORTA 0F80                                              _PORTB 0F81  
                                            _PORTC 0F82                                              _PORTD 0F83  
                                            _PORTE 0F84                                              _TRISA 0F92  
                                            _TRISB 0F93                                              _TRISC 0F94  
                                            _TRISD 0F95                                              _TRISE 0F96  
                                            _TXREG 0FAD                                              tablat 0FF5  
                                            ttemp5 0075                                              ttemp6 0078  
                                            ttemp7 007C                                              wtemp8 0075  
                                  __initialization 105C                                       __end_of_main 10C4  
                                           ??_main 0074                                      __activetblptr 0003  
                                 led_turn_on@F2886 0048                         _EUSART_OverrunErrorHandler 000D  
                                           _ADRESH 0FC4                                             _EEADRH 0FAA  
                                           _ADRESL 0FC3                                             _EEDATA 0FA8  
                                           _CCPR1L 0FBE                                             _CCPR2L 0FBB  
                                           _EECON2 0FA7                                             i1l1089 003E  
                                           i1l4320 003A                                             i1l2732 10C4  
                                           i1l4316 001E                                             i1l4318 002C  
                                           i2l1082 1058                                             i2l1079 1038  
                                           i2l4310 1034                                             i2l4312 1046  
                                           i2l4314 1054                                             i2l4306 1018  
                                           i2l4308 1026                                             i2l2728 10CC  
                                           i2l2738 10C8                                             _SPBRGH 0FB0  
                                           _SSPADD 0FC8                                             _SSPBUF 0FC9  
                                    _tris_regiters 005E                                             clear_0 1082  
                                           isa$std 0001        _I2C_Report_Receive_Overflow_InterruptHandle 0007  
                                     __pdataCOMRAM 004A                                       __mediumconst 0000  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           tblptru 0FF8                                         __accesstop 0080  
                          __end_of__initialization 1088                                          ?_INT0_ISR 0073  
                                        ?_INT1_ISR 0073                                          ?_INT2_ISR 0073  
                                    ___rparam_used 0001                                     __pcstackCOMRAM 0073  
                       _I2C_DefaultInterruptHandle 0009                             _INT2_InterruptHandeler 0037  
                                       ??_INT0_ISR 0073                                         ??_INT1_ISR 0073  
                                       ??_INT2_ISR 0073                        __end_of_InterruptManagerLow 0046  
                                led_turn_off@F2891 0047                                    led_toggle@F2896 0046  
                        _RB6_InterruptHandeler_Low 002B                         _RB4_InterruptHandeler_High 0035  
                                       _btn_values 1001                         _RB7_InterruptHandeler_High 0029  
                             _ADC_InterruptHandler 0041                                            __Hparam 0000  
                                          __Lparam 0000                               _SPI_InterruptHandler 0025  
                                     __psmallconst 1000                                            __pcinit 105C  
                                          __ramtop 1000                                            __ptext0 10BC  
                                          __ptext2 10C4                                            __ptext4 10C8  
                                          __ptext5 10CC                                      relay_on@F2880 0044  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                                        _T2CONbits 0FCA                                          _T3CONbits 0FB1  
                                   __pintcode_body 1016                               end_of_initialization 1088  
                                          int_func 1016                                          _RCSTAbits 0FAB  
                                          postdec1 0FE5                                            postinc0 0FEE  
                                        _TRISCbits 0F94                                        _CCP1CONbits 0FBD  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                    convert_uint16_to_string@F3202 0001                                        _BAUDCONbits 0FB8  
                                    __pidataCOMRAM 1092                                     _timer0_preload 0021  
                              start_initialization 105C  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2930 006D  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2932 006C   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2941 0069  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2943 0068  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F2928 006E  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2937 006B   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F2939 006A  
                                     _lat_regiters 0054                          _EUSART_RxInterruptHandler 0011  
                       _EUSART_FramingErrorHandler 000F                                        __pbssCOMRAM 0001  
      _I2C_Report_Write_Collision_InterruptHandler 000B                             _INT0_InterruptHandeler 003B  
                            _TMR0_InterruptHandler 0023                       __end_of_InterruptManagerHigh 105C  
                                        __pintcode 0008                                        __pintcodelo 0018  
                        _RB4_InterruptHandeler_Low 0033                                        __smallconst 1000  
                        _RB7_InterruptHandeler_Low 0027                         _RB6_InterruptHandeler_High 002D  
                                         _INT0_ISR 10CC                                           _INT1_ISR 10C4  
                                         _INT2_ISR 10C8                                           _RB4_Flag 0072  
                                         _RB5_Flag 0071                                           _RB6_Flag 0070  
                                         _RB7_Flag 006F                                           _IPR1bits 0F9F  
                                         _IPR2bits 0FA2                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                                           i1u207_20 002C  
                                         i1u207_21 0028                                           i1u208_20 003A  
                                         i1u208_21 0036                                           i2u203_40 1026  
                                         i2u203_41 1022                                           i2u204_40 1034  
                                         i2u204_41 1030                                           i2u205_40 1046  
                                         i2u205_41 1042                                           i2u206_40 1054  
                                         i2u206_41 1050                                           _PIR1bits 0F9E  
                                         _PIR2bits 0FA1                               _TMR1InterruptHandler 001F  
                                         _RCONbits 0FD0                                         _ADCON0bits 0FC2  
                                       _ADCON1bits 0FC1                                         _ADCON2bits 0FC0  
                                      _INTCON2bits 0FF1                                        _INTCON3bits 0FF0  
                                        copy_data0 1070                                         _EECON1bits 0FA6  
                                    _timer1preload 001D                                      _timer2preload 0019  
                                         __Hrparam 0000                                      _timer3preload 0015  
                                         __Lrparam 0000                              _CCP1_InterruptHandler 003F  
                             _TMR2InterruptHandler 001B                                 __end_of_btn_values 1011  
                             _InterruptManagerHigh 0008                                     relay_off@F2885 0043  
                                         isa$xinst 0000                                           int$flags 0074  
                                       _INTCONbits 0FF2                              ?_InterruptManagerHigh 0073  
                             _TMR3InterruptHandler 0017                                           intlevel1 0000  
                                         intlevel2 0000                                _InterruptManagerLow 0018  
                        _EUSART_TxInterruptHandler 0013                               ?_InterruptManagerLow 0073  
                                      _SSPCON1bits 0FC6                                        _SSPCON2bits 0FC5  
                           _INT1_InterruptHandeler 0039                              _CCP2_InterruptHandler 003D  
                                    _port_regiters 004A  
